on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      env:
        required: true
        type: string
      aws-region:
        required: true
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build Docker image
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: iac-task-${{ inputs.env }}
          IMAGE_TAG: backend_${{ inputs.ref }}
        run: |
          IMAGE=$REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker build -t $IMAGE src/
          docker push $IMAGE
          echo image=$IMAGE >> "$GITHUB_OUTPUT"
      - name: Render ECS task definition
        id: render-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-family: backend-${{ inputs.env }}
          container-name: backend-${{ inputs.env }}
          image: ${{ steps.build-image.outputs.image }}
      - name: Deploy task to ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-task.outputs.task-definition }}
          service: backend-${{ inputs.env }}
          cluster: instance_cluster